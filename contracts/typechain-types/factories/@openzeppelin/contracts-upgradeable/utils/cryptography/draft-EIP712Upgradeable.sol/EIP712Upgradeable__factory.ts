/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  EIP712Upgradeable,
  EIP712UpgradeableInterface,
} from "../../../../../../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol/EIP712Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
] as const;

export class EIP712Upgradeable__factory {
  static readonly abi = _abi;
  static createInterface(): EIP712UpgradeableInterface {
    return new Interface(_abi) as EIP712UpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EIP712Upgradeable {
    return new Contract(address, _abi, runner) as unknown as EIP712Upgradeable;
  }
}
