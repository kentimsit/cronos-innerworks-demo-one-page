/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  L2StandardERC20,
  L2StandardERC20Interface,
} from "../../contracts/L2StandardERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "BridgeBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "l1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "BridgeInitialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "BridgeMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "bridgeBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Address",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "bridgeInitialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "bridgeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
    ],
    name: "decodeString",
    outputs: [
      {
        internalType: "string",
        name: "result",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
    ],
    name: "decodeUint8",
    outputs: [
      {
        internalType: "uint8",
        name: "result",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b6200012f565b6200002e60ff62000031565b50565b60008054610100900460ff1615620000b6578160ff166001148015620000565750303b155b620000ae5760405162461bcd60e51b815260206004820152602e602482015260008051602062001dfc83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610620001155760405162461bcd60e51b815260206004820152602e602482015260008051602062001dfc83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000a5565b506000805460ff191660ff92909216919091179055600190565b611cbd806200013f6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637ecebe00116100b8578063a457c2d71161007c578063a457c2d71461027c578063a9059cbb1461028f578063ae1f6aaf146102a2578063c2eeeebd146102d2578063d505accf146102e5578063dd62ed3e146102f857600080fd5b80637ecebe00146102285780638c2a993e1461023b57806395ce3e931461024e57806395d89b411461026157806395f11a401461026957600080fd5b80633644e515116100ff5780633644e515146101bc57806339509351146101c457806370a08231146101d757806374f4f547146102005780637ba8be341461021557600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b61014461030b565b6040516101519190611639565b60405180910390f35b61016d610168366004611663565b61032b565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d36600461168d565b610345565b6101aa61036b565b60405160ff9091168152602001610151565b61018161038e565b61016d6101d2366004611663565b610398565b6101816101e53660046116c9565b6001600160a01b031660009081526033602052604090205490565b61021361020e366004611663565b6103ba565b005b6101aa6102233660046117a9565b610455565b6101816102363660046116c9565b61046b565b610213610249366004611663565b610489565b61014461025c3660046117a9565b610513565b610144610529565b6102136102773660046117e6565b610549565b61016d61028a366004611663565b610875565b61016d61029d366004611663565b6108fb565b60cd546102ba9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610151565b60ce546102ba906001600160a01b031681565b6102136102f3366004611843565b610909565b6101816103063660046118b0565b610a6d565b60cc5460609060ff161561031e57600080fd5b610326610a98565b905090565b600033610339818585610b2a565b60019150505b92915050565b600033610353858285610c4e565b61035e858585610cc8565b60019150505b9392505050565b60cc5460009062010000900460ff161561038457600080fd5b5060cd5460ff1690565b6000610326610e96565b6000336103398185856103ab8383610a6d565b6103b591906118f9565b610b2a565b60cd5461010090046001600160a01b031633146104045760405162461bcd60e51b81526020600482015260036024820152621e1b9d60ea1b60448201526064015b60405180910390fd5b61040e8282610f11565b816001600160a01b03167f9b5b9a05e4726d8bb959f1440e05c6b8109443f2083bc4e386237d76545265538260405161044991815260200190565b60405180910390a25050565b60008180602001905181019061033f919061190c565b6001600160a01b03811660009081526099602052604081205461033f565b60cd5461010090046001600160a01b031633146104ce5760405162461bcd60e51b81526020600482015260036024820152621e1b9d60ea1b60448201526064016103fb565b6104d8828261105f565b816001600160a01b03167f397b33b307fc137878ebfc75b295289ec0ee25a31bb5bf034f33256fe8ea2aa68260405161044991815260200190565b60608180602001905181019061033f9190611959565b60cc54606090610100900460ff161561054157600080fd5b61032661113e565b6000610555600161114d565b9050801561056d576000805461ff0019166101001790555b6001600160a01b0383166105a95760405162461bcd60e51b815260206004820152600360248201526234b71b60e91b60448201526064016103fb565b60ce80546001600160a01b0319166001600160a01b03851617905560cd8054610100600160a81b03191661010033021790558151600090819081906105f790602090870181019087016119c2565b60408051606080820183526000808352602083018190528284015291516395ce3e9360e01b81529497509295509093509091819030906395ce3e9390610641908990600401611639565b600060405180830381865afa92505050801561067f57506040513d6000823e601f3d908101601f1916820160405261067c9190810190611959565b60015b61068c576001835261068f565b91505b6040516395ce3e9360e01b815230906395ce3e93906106b2908890600401611639565b600060405180830381865afa9250505080156106f057506040513d6000823e601f3d908101601f191682016040526106ed9190810190611959565b60015b6107005760016020840152610703565b90505b61070d82826111da565b6107168261121a565b604051631eea2f8d60e21b81523090637ba8be3490610739908790600401611639565b602060405180830381865afa925050508015610772575060408051601f3d908101601f1916820190925261076f9181019061190c565b60015b6107825760016040840152610797565b60cd805460ff191660ff929092169190911790555b825160cc805460208601516040808801511515620100000262ff0000199215156101000261ff00199615159690961661ffff1990941693909317949094171617905560cd5490516001600160a01b038b16917f81e8e92e5873539605a102eddae7ed06d19bea042099a437cbc3644415eb74049161081c918691869160ff1690611a4a565b60405180910390a25050505050508015610870576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b600033816108838286610a6d565b9050838110156108e35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103fb565b6108f08286868403610b2a565b506001949350505050565b600033610339818585610cc8565b834211156109595760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103fb565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109888c611267565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006109e38261128f565b905060006109f3828787876112dd565b9050896001600160a01b0316816001600160a01b031614610a565760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103fb565b610a618a8a8a610b2a565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b606060368054610aa790611a83565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad390611a83565b8015610b205780601f10610af557610100808354040283529160200191610b20565b820191906000526020600020905b815481529060010190602001808311610b0357829003601f168201915b5050505050905090565b6001600160a01b038316610b8c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fb565b6001600160a01b038216610bed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fb565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c5a8484610a6d565b90506000198114610cc25781811015610cb55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fb565b610cc28484848403610b2a565b50505050565b6001600160a01b038316610d2c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fb565b6001600160a01b038216610d8e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fb565b6001600160a01b03831660009081526033602052604090205481811015610e065760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fb565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610e3d9084906118f9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e8991815260200190565b60405180910390a3610cc2565b60006103267f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610ec560655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6001600160a01b038216610f715760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fb565b6001600160a01b03821660009081526033602052604090205481811015610fe55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fb565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611014908490611ab7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0382166110b55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fb565b80603560008282546110c791906118f9565b90915550506001600160a01b038216600090815260336020526040812080548392906110f49084906118f9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b606060378054610aa790611a83565b60008054610100900460ff1615611194578160ff1660011480156111705750303b155b61118c5760405162461bcd60e51b81526004016103fb90611aca565b506000919050565b60005460ff8084169116106111bb5760405162461bcd60e51b81526004016103fb90611aca565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166112015760405162461bcd60e51b81526004016103fb90611b18565b603661120d8382611bb1565b5060376108708282611bb1565b600054610100900460ff166112415760405162461bcd60e51b81526004016103fb90611b18565b61126481604051806040016040528060018152602001603160f81b815250611305565b50565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b600061033f61129c610e96565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006112ee87878787611346565b915091506112fb81611433565b5095945050505050565b600054610100900460ff1661132c5760405162461bcd60e51b81526004016103fb90611b18565b815160209283012081519190920120606591909155606655565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561137d575060009050600361142a565b8460ff16601b1415801561139557508460ff16601c14155b156113a6575060009050600461142a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156113fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114235760006001925092505061142a565b9150600090505b94509492505050565b600081600481111561144757611447611c71565b0361144f5750565b600181600481111561146357611463611c71565b036114b05760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103fb565b60028160048111156114c4576114c4611c71565b036115115760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103fb565b600381600481111561152557611525611c71565b0361157d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103fb565b600481600481111561159157611591611c71565b036112645760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103fb565b60005b838110156116045781810151838201526020016115ec565b50506000910152565b600081518084526116258160208601602086016115e9565b601f01601f19169290920160200192915050565b602081526000610364602083018461160d565b80356001600160a01b03811681146111d557600080fd5b6000806040838503121561167657600080fd5b61167f8361164c565b946020939093013593505050565b6000806000606084860312156116a257600080fd5b6116ab8461164c565b92506116b96020850161164c565b9150604084013590509250925092565b6000602082840312156116db57600080fd5b6103648261164c565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611723576117236116e4565b604052919050565b600067ffffffffffffffff821115611745576117456116e4565b50601f01601f191660200190565b600082601f83011261176457600080fd5b81356117776117728261172b565b6116fa565b81815284602083860101111561178c57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156117bb57600080fd5b813567ffffffffffffffff8111156117d257600080fd5b6117de84828501611753565b949350505050565b600080604083850312156117f957600080fd5b6118028361164c565b9150602083013567ffffffffffffffff81111561181e57600080fd5b61182a85828601611753565b9150509250929050565b60ff8116811461126457600080fd5b600080600080600080600060e0888a03121561185e57600080fd5b6118678861164c565b96506118756020890161164c565b95506040880135945060608801359350608088013561189381611834565b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156118c357600080fd5b6118cc8361164c565b91506118da6020840161164c565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561033f5761033f6118e3565b60006020828403121561191e57600080fd5b815161036481611834565b60006119376117728461172b565b905082815283838301111561194b57600080fd5b6103648360208301846115e9565b60006020828403121561196b57600080fd5b815167ffffffffffffffff81111561198257600080fd5b8201601f8101841361199357600080fd5b6117de84825160208401611929565b600082601f8301126119b357600080fd5b61036483835160208501611929565b6000806000606084860312156119d757600080fd5b835167ffffffffffffffff808211156119ef57600080fd5b6119fb878388016119a2565b94506020860151915080821115611a1157600080fd5b611a1d878388016119a2565b93506040860151915080821115611a3357600080fd5b50611a40868287016119a2565b9150509250925092565b606081526000611a5d606083018661160d565b8281036020840152611a6f818661160d565b91505060ff83166040830152949350505050565b600181811c90821680611a9757607f821691505b60208210810361128957634e487b7160e01b600052602260045260246000fd5b8181038181111561033f5761033f6118e3565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561087057600081815260208120601f850160051c81016020861015611b8a5750805b601f850160051c820191505b81811015611ba957828155600101611b96565b505050505050565b815167ffffffffffffffff811115611bcb57611bcb6116e4565b611bdf81611bd98454611a83565b84611b63565b602080601f831160018114611c145760008415611bfc5750858301515b600019600386901b1c1916600185901b178555611ba9565b600085815260208120601f198616915b82811015611c4357888601518255948401946001909101908401611c24565b5085821015611c615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d08a80464e6459b94b5f82b27e58403e9fbfced4df0c5419735f446555faeb5964736f6c63430008140033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type L2StandardERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2StandardERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2StandardERC20__factory extends ContractFactory {
  constructor(...args: L2StandardERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      L2StandardERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): L2StandardERC20__factory {
    return super.connect(runner) as L2StandardERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2StandardERC20Interface {
    return new Interface(_abi) as L2StandardERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): L2StandardERC20 {
    return new Contract(address, _abi, runner) as unknown as L2StandardERC20;
  }
}
